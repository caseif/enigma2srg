buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
}

apply plugin: 'license'

defaultTasks 'clean', 'licenseFormat', 'build'

group 'net.caseif.enigma2srg'
version '1.0.0-SNAPSHOT'

ext.projectName = 'enimga2srg'
ext.description = 'Utility for converting deobfuscation mappings generated by Enigma to SRG format.'
ext.inceptionYear = '2015'
ext.packaging = 'jar'
ext.author = 'Max Roncacé'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
                'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Main-Class': 'net.caseif.enigma2srg.Main',
        )
    }
}

processResources {
    from 'LICENSE'
}

license {
    header file('LICENSE')
    excludes([
            '**/*.MD'
    ])
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourceJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}